1. Create standard
2. Test standard files automatically (however possible)


/docs
├── README.md
├── standard_spec/
│   ├── standard_spec.md
│   ├── units_and_conventions.md
│   ├── sign_conventions.md
│   └── phase_calculation.md
├── tutorials/
│   ├── getting_started_python.md
│   └── getting_started_matlab.md
├── how_to_guides/
│   ├── validate_dataset.md
│   ├── write_mapping_table.md
│   └── add_new_dataset.md
├── explanations/
│   ├── architecture_overview.md
│   ├── metadata_schema.md
│   └── coordinate_frames.md
├── reference/
│   ├── api_reference.md
│   ├── schema_definition.json
│   └── task_vocabulary.csv
├── assets/
│   ├── images/
│   │   ├── sign_conventions.png
│   │   └── phase_diagram.svg
│   └── diagrams/
│       └── data_flow.drawio
├── CHANGELOG.md
├── CONTRIBUTING.md
└── CODE_OF_CONDUCT.md




Top-Level Docs Directory
docs/README.md
Provides an entry point summarizing the project purpose, navigation hints, and links to key sections. This mirrors the “master folder” approach recommended for easy onboarding 
LinkedIn
.

standard_spec/
Houses the formal specification: overall standard, unit conventions, sign-convention rules, and phase-calculation algorithms. Keeping these in separate files prevents a monolithic spec and eases targeted updates 
FileCenter
.

Tutorials
tutorials/
Contains step-by-step guides and runnable examples (e.g., Jupyter notebooks) for converting raw datasets. Dividing these from reference content helps new users “get started” without overwhelming them 
Reddit
.

How-To Guides
how_to_guides/
Focuses on procedural documentation like validation, mapping table creation, and extending the standard to new sources. This is the “How-To” category in Divio’s model for specific tasks 
Reddit
.

Explanations
explanations/
Delves into rationale, such as metadata design choices, architecture decisions, or coordinate frame reasons. Separating explanation from how-to prevents conflating procedure with theory 
Software Engineering Stack Exchange
.

Reference
reference/
Includes machine-readable schemas (JSON Schema), API references, controlled vocabularies, and CSV lookup tables. This is the canonical “field-by-field details” that automated tools and advanced users rely on 
Reddit
.

Assets
assets/
Stores images, diagrams, and other binary files. Keeping these out of the text directories avoids merge conflicts and simplifies caching/layout in docs sites 
Data Cooperative
.

Project-Level Documents
CHANGELOG.md – Tracks standard updates and version releases, following conventional commits or semver practices 
krajzewicz.de
.

CONTRIBUTING.md – Onboarding guide for new contributors, including style rules, testing requirements, and PR guidelines 
DEV Community
.

CODE_OF_CONDUCT.md – Defines community norms, promoting a healthy contributor environment 
SuiteFiles
.

Customization Tips

Adjust folder names to match your team’s vocabulary (e.g., spec/ vs. standard_spec/).

If you host docs with a static site generator (e.g., MkDocs or Docusaurus), mirror the site’s structure here for direct deployment.

Include a mkdocs.yml or similar config at the repo root if you automate the web-publishing pipeline.

This layout balances discoverability, modularity, and maintainability, aligning with industry best practices for documentation at scale. Feel free to iterate based on your workflow and tooling!